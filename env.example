# WebRTC Signaling Server Configuration Example
# Copy this file to .env and update the values

# Server Configuration
# For production behind nginx: use 127.0.0.1 (localhost only)
# For direct access or development: use 0.0.0.0 (all interfaces)
HOST=127.0.0.1
PORT=8000
DEBUG=false

# WebSocket Configuration
WEBSOCKET_TIMEOUT=30
MAX_CONNECTIONS_PER_ROOM=10

# CORS Configuration
# Option 1: Allow all origins (use for multiple clients with different addresses)
CORS_ORIGINS=["*"]
# Option 2: Restrict to specific domains (recommended for production if possible)
# CORS_ORIGINS=["http://localhost:3000", "http://127.0.0.1:3000", "https://localhost:3000", "https://127.0.0.1:3000"]
CORS_ALLOW_CREDENTIALS=true

# Logging Configuration
LOG_LEVEL=INFO

# Security Configuration (CHANGE THESE IN PRODUCTION!)
SECRET_KEY=your-super-secret-key-change-this-in-production-256-bits
JWT_SECRET_KEY=your-jwt-secret-key-change-this-in-production-256-bits
ALLOWED_ROOMS=[]
# Set to false when running behind nginx (nginx handles HTTPS)
# Set to true only when running FastAPI with SSL directly
REQUIRE_HTTPS=false

# Rate Limiting
RATE_LIMIT_PER_MINUTE=60

# Health Check
HEALTH_CHECK_INTERVAL=30

# TURN Server Configuration
TURNSERVER_SECRET=your-turnserver-secret-key-change-this-in-production
TURNSERVER_URL=turn:your-turn-server.com:3478
TURNSERVER_URLS=["turn:your-turn-server.com:3478", "turns:your-turn-server.com:5349"]
TURNSERVER_TTL=86400
